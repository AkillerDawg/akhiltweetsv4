// Generated by CoffeeScript 1.7.1
var app, config, express, getTweetInfo, getTweets, http, qs, twitter;

express = require('express');

qs = require('querystring');

app = express();

http = require('http').Server(app);

config = require('./config');

twitter = new require('twitter')(config.twitter);

app.set('view engine', 'jade');

app.set('views', __dirname + '/views');

app.use('/public', express["static"]("" + __dirname + "/public"));

app.get('/', function(i, o) {
  return o.render('index');
});

getTweetInfo = function(tweet) {
  var ret;
  ret = {
    id: tweet.id_str,
    text: tweet.text
  };
  if (tweet.place != null) {
    ret.place = tweet.place.full_name;
  }
  return ret;
};

getTweets = function(username, sinceId, cb) {
  var makeParams, _get;
  makeParams = function(next) {
    var ret;
    ret = {
      q: "@" + username,
      count: 100
    };
    if (next != null) {
      ret.max_id = qs.parse(next.slice(1)).max_id;
    }
    if (sinceId != null) {
      ret.since_id = sinceId;
    }
    return ret;
  };
  _get = function(pool, next) {
    return twitter.get('search/tweets', makeParams(next), function(err, tweets) {
      var x;
      console.log(err, tweets);
      if (pool == null) {
        pool = [];
      }
      if ((tweets != null) && (tweets.statuses != null) && tweets.statuses.length > 0) {
        pool = pool.concat(tweets.statuses);
        if (tweets.search_metadata.next_results) {
          if (pool.length < 100) {
            return _get(pool, tweets.search_metadata.next_results);
          }
        }
      }
      return cb((function() {
        var _i, _len, _ref, _results;
        _ref = pool.slice(0, 100);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          x = _ref[_i];
          _results.push(getTweetInfo(x));
        }
        return _results;
      })());
    });
  };
  return _get();
};

app.get('/tweets', function(i, o) {
  return getTweets(i.query.username, null, function(tweets) {
    return o.render('tweets', {
      tweets: tweets,
      username: i.query.username,
      apiKey: config.googleMaps
    });
  });
});

app.get('/poll', function(i, o) {
  return getTweets(i.query.username, i.query.sinceId, function(tweets) {
    return o.json({
      tweets: tweets
    });
  });
});

http.listen(3000, function() {
  return console.log('listening on *:3000');
});
